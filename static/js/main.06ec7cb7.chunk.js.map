{"version":3,"sources":["components/my_contacts_components/Contact.js","components/my_contacts_components/Contacts.js","components/my_contacts_components/ContactForm.js","components/my_contacts_components/AddContact.js","components/MyContacts.js","components/NavBar.js","App.js","index.js"],"names":["Contact","id","contact","onDelete","Card","border","className","Header","name","Body","Img","variant","src","avatar_url","alt","Title","phone","Subtitle","description","CloseButton","onClick","Contacts","contacts","Row","md","lg","map","index","ContactForm","onAdd","useState","setName","setPhone","setDescription","setAvatar","Col","Form","onSubmit","e","preventDefault","Group","as","Label","column","sm","Control","placeholder","value","onChange","target","span","offset","Button","des","random_number","Math","floor","random","random_url","String","random_start","length","substr","type","addFormStyle","position","top","AddContact","Container","style","leftStyle","minHeight","backgroundColor","rightStyle","MyContacts","setContacts","newContact","filter","_","NavBar","setVariant","color","setColor","Navbar","bg","sticky","Brand","Nav","NavDropdown","title","Item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06ec7cb7.chunk.js","sourcesContent":["import { CloseButton, Card } from \"react-bootstrap\"\r\n\r\nconst Contact = ({id, contact, onDelete}) =>{\r\n    return(\r\n        <Card border='dark' className='m-4'>\r\n            <Card.Header>{contact.name}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Img variant='top' src={contact.avatar_url} alt='Avatar'/>\r\n                <Card.Title>{contact.phone}</Card.Title>\r\n                <Card.Subtitle>{contact.description}</Card.Subtitle>\r\n                <CloseButton onClick={() => onDelete(id)}/>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Contact","import Contact from \"./Contact\"\r\nimport { Row } from \"react-bootstrap\"\r\n\r\n\r\nconst Contacts = ({contacts, onDelete}) => {\r\n\r\n    return(\r\n        <Row md={3} lg={5}  className='border-left'>\r\n\r\n            {contacts.map((contact, index)=>(\r\n                <Contact id={index} contact={contact} onDelete={onDelete}/>\r\n            ))}\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Contacts","import { useState } from \"react\";\r\nimport { Form, Col, Row, Button, Card } from \"react-bootstrap\"\r\n\r\n\r\nconst ContactForm = ({onAdd}) => {\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [avatar_url, setAvatar] = useState('');\r\n\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        onAdd({name, phone, description, avatar_url});\r\n        setName('');\r\n        setPhone('');\r\n        setDescription('');\r\n        setAvatar('');\r\n    }\r\n\r\n    const randomGenerate = () =>{\r\n      const des = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam malesuada ornare diam, vel congue justo. Morbi iaculis non lorem in vulputate. Nullam in elementum quam, sed placerat orci. Nam dictum leo ipsum, at molestie lorem molestie eu. Sed varius eros tortor, vel placerat justo consequat at. Etiam mi dolor, iaculis sed tincidunt ac, congue at magna. Maecenas varius mollis est, a posuere metus malesuada sit amet. Suspendisse vitae condimentum nisl, vel feugiat tortor. Duis malesuada sapien vehicula tincidunt viverra. Integer euismod dui lacus, et fermentum quam fringilla sed. Mauris suscipit velit non tellus feugiat hendrerit. Praesent lacinia sapien sit amet tincidunt bibendum. Phasellus felis libero, ullamcorper id placerat vel, mollis ac enim. Vivamus volutpat ornare consequat. Vestibulum volutpat eget odio quis sollicitudin.'\r\n\r\n      const random_number = Math.floor(Math.random()*30) + 30\r\n      const random_url = 'https://image.flaticon.com/icons/png/512/949/9495' + String(random_number) + '.png'\r\n      const name = 'Lorem Ipsum'\r\n      const phone = Math.floor(Math.random()*900000) + 100000\r\n\r\n      const random_start = Math.floor(Math.random()*(des.length-40))\r\n      const description = des.substr(random_start, 30)\r\n      setName(name)\r\n      setPhone(phone)\r\n      setDescription(description)\r\n      setAvatar(random_url)\r\n    }\r\n\r\n    return(\r\n        // className=\"m-3\"\r\n// {/* <Container className='position-fixed top-50 translate-middle-y'> */}\r\n<Row  className=\"p-2 justify-content-center\">\r\n\r\n<Col lg={8} className=\"col-xxl-6\">\r\n  <Form onSubmit={onSubmit} className='border p-4 border-dark bg-light'>\r\n    <Form.Group as={Row} className=\"mb-3\">\r\n      <Form.Label column sm={3}> Name </Form.Label>\r\n      <Col sm={9}>\r\n        <Form.Control placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n      </Col>\r\n    </Form.Group>\r\n  \r\n    <Form.Group as={Row} className=\"mb-3\">\r\n      <Form.Label column sm={3}> Phone </Form.Label>\r\n      <Col sm={9}>\r\n        <Form.Control placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)}/>\r\n      </Col>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Row} className=\"mb-3\">\r\n      <Form.Label column sm={3}> Avatar_url </Form.Label>\r\n      <Col sm={9}>\r\n        <Form.Control placeholder=\"Avatar_url\" value={avatar_url} onChange={(e) => setAvatar(e.target.value)}/>\r\n      </Col>\r\n    </Form.Group>\r\n  \r\n    <Form.Group as={Row} className=\"mb-3\">\r\n      <Form.Label column sm={3}> Description </Form.Label>\r\n      <Col sm={9}>\r\n        <Form.Control as=\"textarea\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n      </Col>\r\n    </Form.Group>\r\n  \r\n    <Form.Group as={Row} className=\"mb-3\">\r\n      <Col sm={{ span: 6, offset: 0 }}>\r\n        <Button variant='warning' onClick={randomGenerate}>Random Generate</Button>\r\n      </Col>\r\n\r\n      <Col sm={{ span: 6, offset: 0 }}>\r\n        <Button type=\"submit\">Save Contact</Button>\r\n      </Col>\r\n\r\n    </Form.Group>\r\n\r\n  </Form>\r\n</Col>\r\n  \r\n<Col lg={4} className='col-xxl-3'>\r\n    <Card border='dark'>\r\n        <Card.Header>{name ? name : '*Preview*'}</Card.Header>\r\n        <Card.Body>\r\n            <Card.Img variant='top' src={avatar_url ? avatar_url : 'https://image.flaticon.com/icons/png/512/949/949549.png'}  alt='Avatar'/>\r\n            <Card.Title>{phone ? phone : '*Phone*'}</Card.Title>\r\n            <Card.Subtitle>{description? description : '*Description*'}</Card.Subtitle>\r\n        </Card.Body>\r\n    </Card>\r\n</Col>\r\n</Row>\r\n\r\n// </Container>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default ContactForm","import ContactForm from \"./ContactForm\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst addFormStyle = {\r\n  position: \"sticky\",\r\n  top: \"30%\",\r\n}\r\n\r\nconst AddContact = ({onAdd}) =>{\r\n\r\n\r\n    return(\r\n      <Container style={addFormStyle}>\r\n          <ContactForm onAdd={onAdd} />\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default AddContact","import {Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport Contacts from \"./my_contacts_components/Contacts\";\r\nimport AddContact from \"./my_contacts_components/AddContact\";\r\n\r\nconst leftStyle = {\r\n  minHeight: \"100vh\",\r\n  backgroundColor: '#DEBA9D',\r\n}\r\nconst rightStyle = {\r\n  minHeight: \"100vh\",\r\n  backgroundColor: '#9E7777',\r\n}\r\n\r\n\r\n\r\nconst MyContacts = () =>{\r\n\r\n    const [contacts, setContacts] = useState([\r\n        {\r\n          \"name\": 'Lorem Ipsum',\r\n          \"phone\": \"333444\",\r\n          \"description\": \"friend from work\",\r\n          \"avatar_url\": 'https://image.flaticon.com/icons/png/512/949/949549.png'\r\n      },\r\n      {\r\n        \"name\": \"Lorem Ipsum\",\r\n          \"phone\": \"777888\",\r\n          \"description\": 'friend from school',\r\n          \"avatar_url\": 'https://image.flaticon.com/icons/png/512/949/949553.png'\r\n    },\r\n    {\r\n      \"name\": \"Lorem Ipsum\",\r\n        \"phone\": \"222111\",\r\n        \"description\": 'friend from family',\r\n        \"avatar_url\": 'https://image.flaticon.com/icons/png/512/949/949552.png'\r\n  },\r\n  {\r\n    \"name\": \"Lorem Ipsum\",\r\n      \"phone\": \"555999\",\r\n      \"description\": 'friend from community',\r\n      \"avatar_url\": 'https://image.flaticon.com/icons/png/512/949/949553.png'\r\n}]\r\n      \r\n      );\r\n\r\n\r\n    const deleteContact = (id) =>{\r\n        setContacts( contacts.filter((_, index) => (index !== id)))\r\n    }\r\n\r\n    const addContact = (newContact) =>{\r\n        setContacts([...contacts, newContact])\r\n    }\r\n    \r\n    return(\r\n        <Row>\r\n            <Col md={6} style={leftStyle}>\r\n                <AddContact onAdd={addContact}/>\r\n            </Col>\r\n            <Col md={6} style={rightStyle}>\r\n                {contacts.length > 0 ? <Contacts contacts={contacts} onDelete={deleteContact}/> : <h2>No contacts.</h2>}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyContacts","import { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\"\r\nimport { useState } from \"react\"\r\n\r\nconst NavBar = () => {\r\n  const [variant, setVariant] = useState('dark')\r\n  const [color, setColor] = useState('dark')\r\n\r\n    return(\r\n        <Navbar bg={color} variant={variant} sticky='top'>\r\n        <Container>\r\n        <Navbar.Brand>Create and add your contacts</Navbar.Brand>\r\n\r\n        <Nav className=\"mr-auto\">\r\n        <Navbar.Brand> Navbar settings</Navbar.Brand>\r\n          <NavDropdown title=\"Color\">\r\n            <NavDropdown.Item onClick={()=>(setColor('primary'))}>Primary</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('secondary'))}>Secondary</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('primary'))}>Primary</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('danger'))}>Danger</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('warning'))}>Warning</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('info'))}>Info</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('light'))}>Light</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setColor('dark'))}>Dark</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <NavDropdown title=\"Variant\">\r\n            <NavDropdown.Item onClick={()=>(setVariant('dark'))}>Dark</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={()=>(setVariant('light'))}>Light</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import MyContacts from './components/MyContacts';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <MyContacts />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}